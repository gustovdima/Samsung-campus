Задачи на массивы:

1. Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве определит количество элементов,
у которых есть два соседних элемента и при этом они оба меньше данного. Входные данные:
Сначала задано число N — количество элементов в массиве (1<=N<=100). Далее через пробел записаны N чисел — элементы массива.
Массив состоит из целых чисел. Выходные данные: Необходимо вывести количество элементов массива,
у которых два соседа и которые при этом строго больше обоих своих соседей.
Примеры входные данные: 5 1 2 3 4 5 выходные данные: 0 входные данные: 5 1 5 1 5 1 выходные данные: 2

      int[] arr = {};
      int count = 0;

      for(int i = 1; i < arr.length - 1; i++){
        int prev = arr[i - 1];
        int next = arr[i + 1];

        if(arr[i] > prev && arr[i] > next){
          count++;
        }
      }
      System.out.println(count);
      
      
2. Дан массив, состоящий из целых чисел. Напишите программу, которая подсчитает количество элементов массива, больших предыдущего (элемента с предыдущим номером)\


  int[] arr = {32,1,123,56,98,14,40}; int sum = 0;

  for(int i = 1; i < arr.length; i++){
    if (arr[i - 1] < arr[i]){
    sum+=1;
  }
}

  System.out.println(sum);
  
  
3. Создайте массив из 8 случайных целых чисел из отрезка [1;10]. Выведите массив на экран в строку. 
Замените каждый элемент с нечётным индексом на ноль. Снова выведете массив на экран на отдельной строке.


        int[] arr = new int[8];
        int sum = 0;
        for (int i = 0; i < arr.length; i++) {
            Random rand = new Random();
            arr[i] = rand.nextInt(1, 11);
            System.out.print(arr[i] + " ");
        }
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] % 2 != 0) {
                arr[i] = 0;
                System.out.println(arr[i] + " ");
            }
        }
        
        
4. Дан массив, состоящий из целых чисел. Напишите программу, которая определяет, есть ли в массиве пара соседних элементов с одинаковыми знаками.
Входные данные: Сначала задано число N — количество элементов в массиве (1<=N<=10000). 
Далее через пробел записаны N чисел — элементы массива. Массив состоит из целых чисел. Выходные данные:
Необходимо вывести слово YES, если существует пара соседних элементов с одинаковыми знаками.
В противном случае следует вывести слово NO. Примеры входные данные: 5 1 -3 4 -2 1 выходные данные: NO


      Scanner scan = new Scanner (System.in);
      int n = scan.nextInt();
      int[] arr = new int[n];

      for(int i = 0; i < arr.length; i++){
        int k = scan.nextInt();
        arr[i] = k;
      }
      int y = 0;
      for (int i = 1; i < arr.length - 1; i++){
        if((arr[i] > 0 & arr[i -1] > 0) || (arr[i] > 0 & arr[i -1] > 0)){
          y = 1;
        }
    }
    if(y == 1){
      System.out.println("YES");
    }else{
      System.out.println("NO");
    }


5. Дан список, упорядоченный по неубыванию элементов в нем. Определите, сколько в нем различных элементов.
Ввод Вывод 1 1 2 3 3 3 3

      int[] arr = {1,1,2,3,3,3};

      int counter = 1;
      for (int i = 0; i < arr.length; i++){
        for( int j = 0; j < arr[i]; j++){
          if ( arr[i] != arr[j] && arr[i] != arr[i - 1]){
            counter++;
            break;
          }
        }
      }
      System.out.println(counter);
      
      
6. Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю. Помогите ему это сделать.
Входные данные: Программа получает на вход невозрастающую последовательность натуральных чисел, означающих рост каждого человека в строю. 
После этого вводится число X – рост Пети. Все числа во входных данных натуральные и не превышают 200.
Выходные данные: Выведите номер, под которым Петя должен встать в строй. 
Если в строю есть люди с одинаковым ростом, таким же, как у Пети, то он должен встать после них. Нумерация начинается с нуля


      Scanner scan = new Scanner(System.in);
      int x = scan.nextInt();
      int counter = 0;
      int[] arr = {175, 165, 180, 191, 172, 170, 170};
     // int[] arr2 = new int[];
      for (int i = 0; i < arr.length; i++){
        if (x >= arr[i]){
          counter++;
      }
    }
    System.out.println(counter);
  }
  
7. Создайте массив из 12 случайных целых чисел из отрезка [-15;15]. 
Определите какой элемент является в этом массиве максимальным и сообщите индекс его последнего вхождения в массив

        int[] arr = new int[12];
        for (int i = 0; i < arr.length; i++) {
            Random rand = new Random();
            arr[i] = rand.nextInt(-15, 16);
            System.out.println(arr[i] + " ");
        }
        int max = arr[0], ind = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] >= max) {
                max = arr[i];
                ind = i;
            }
        }
        System.out.println("Максимальное число " + max);
        System.out.println("Индекс его последнего вхождения " + ind);
        
        
8. Создайте массив из 10 случайных чисел от 0 до 20, найдите: мин, макс, сумму всех элементов, среднее значение всех элементов, кол-во четных и нечетных элементов

        int[] arr = new int[10];
        Random rand = new Random();
        int min, max, sum, sum1, sum2;
        sum2 = 0;
        sum1 = 0;
        sum = 0;
        max = 0;
        min = 1000000;
        for (int i = 0; i < arr.length; i++) {
            arr[i] = rand.nextInt(21);
            System.out.print(arr[i] + " ");
        }
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] < min) {
                min = arr[i];
            }
            if (arr[i] > max) {
                max = arr[i];
            }
        }

        System.out.println("\n" + "Минимальное число массива " + min);
        System.out.println("Максимальное число массива " + max);

        for (int i = 0; i < arr.length; i++) {
            sum += arr[i];
        }
        System.out.println("Сумма всех чисел массива " + sum);

        double a = 0;
        if (arr.length > 0) {

            double suma = 0;
            for (int j = 0; j < arr.length; j++) {
                suma += arr[j];
            }
            a = suma / arr.length;
        }
        System.out.println("Cреднее значение всех элементов " + a);

        for (int i = 0; i < arr.length; i++) {

            if (arr[i] % 2 == 0) {
                sum1 += 1;
            }
            if (arr[i] % 2 != 0) {
                sum2 += 1;
            }
        }
        System.out.println("Количество четных " + sum1);
        System.out.println("Количество нечетных " + sum2);
        
        
9.В массиве хранится информация о количестве людей, живущих на каждом из 15 этажей дома (на первом этаже — в нулевом элементе массива, на втором — в первом и т. д.) 
Определить два этажа, на которых проживает меньше всего людей. (Если минимальное количество жителей одинаково на 2х и более этажах, то вывести наименьшие этажи 

        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] apartment = new int[n];
        for (int i = 0; i < n; i++) {
            int k = sc.nextInt();
            apartment[i] = k;
        }

        int ml = apartment[0];
        int p = 0;
        for (int i = 1; i < n; i++) {
            if (apartment[i] < ml) {
                ml = apartment[i];
                p = i;
            }
        }

        int kl = apartment[0];
        int j = 0;
        apartment[p] = 2147483647;
        for (int i = 1; i < n; i++) {
            if (apartment[i] < ml) {
                kl = apartment[i];
                j = i;
            }
        }
        p = p + 1;
        j = j + 1;
        System.out.println(p + " " + j);
        
        
        
10. Пользователь должен указать с клавиатуры чётное положительное число, а программа должна создать массив указанного размера из случайных целых чисел из [-5;5]
и вывести его на экран в строку. После этого программа должна определить и сообщить пользователю о том,
сумма модулей какой половины массива больше: левой или правой, либо сообщить, что эти суммы модулей равны.
Если пользователь введёт неподходящее число, то программа должна требовать повторного ввода до тех пор, пока не будет указано корректное значени


        int n = 0, a, s1 = 0, s2 = 0;
        do {
            Scanner sc = new Scanner(System.in);
            if (sc.hasNextInt()) {
                n = sc.nextInt();
                if (n > 0 && n % 2 == 0) {
                    int[] mas = new int[n];
                    for (int i = 0; i < mas.length; i++) {
                        mas[i] = (int) (Math.random() * 12 - 6);
                        System.out.print(mas[i] + " ");
                    }
                    a = mas.length / 2;
                    for (int i = 0; i < a; i++) {
                        s1 = s1 + Math.abs(mas[i]);
                    }
                    for (int i = a; i < mas.length; i++) {
                        s2 = s2 + Math.abs(mas[i]);
                    }
                    if (s1 < s2) {
                        System.out.print("Левая больше");
                    } else if (s1 > s2) {
                        System.out.print("Правая больше");
                    } else {
                        System.out.print("Сумма модулей равны");
                    }
                }
            }
        } while (n <= 0 || n % 2 != 0);


11. Пользователь вводит с клавиатуры натуральное число большее 3, которое сохраняется в переменную n.
Если пользователь ввёл не подходящее число, то программа должна просить пользователя повторить ввод.
Создать массив из n случайных целых чисел из отрезка [0;n] и вывести его на экран. 
Создать второй массив только из чётных элементов первого массива, если они там есть, и вывести его на экран


    Scanner sc = new Scanner(System.in); int n = 0;

    while (n <= 3) {
        if(sc.hasNextInt()){
            n = sc.nextInt();
            if(n <= 3){
                System.out.println("Введенное число должно быть больше 3. Повторите ввод:");
            }
        } else {
            System.out.println("Вы ввели не число. Повторите ввод:");
            sc.next();
        }
    }
    
    int [] mas1 = new int[n];
    int evenNums = 0;

    for (int i = 0; i < n; i++) {
         mas1[i] = (int)(Math.random()*(n+1));
         if(mas1[i]%2 == 0){
            evenNums++;
        }
    }
    
    System.out.println(Arrays.toString(mas1));
    int [] mas2 = new int[evenNums];
    int index = 0;
    for (int i = 0; i < n; i++) {
         if(mas1[i]%2 == 0){
            mas2[index] = mas1[i];
            index++;
        }
    }
    System.out.println(Arrays.toString(mas2));
    
    
12. Создайте массив, содержащий рост учеников класса (вводится с клавы). Рост мальчиков условно задан отрицательными числами. 
Верно ли, что средний рост мальчиков превышает средний рост девочек более чем на 10 см?

        int i = 0, j = 0;
        double m = 0, d = 0;
        int n = 0;
        Scanner scan = new Scanner(System.in);
        n = scan.nextInt();
        while (n != 0) {
            if (n < 0) {
                m = m + n;
                i = i + 1;
            } else {
                d = d + n;
                j = j + 1;
            }
            n = scan.nextInt();
        }
        if (Math.abs(m) / i - d / j > 10) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
        
        
13. Создайте два массива из 10 целых случайных чисел из отрезка [1;9] и третий массив из 10 действительных чисел.
Каждый элемент с i-ым индексом третьего массива должен равняться отношению элемента из первого массива с i-ым индексом к элементу из второго массива с i-ым индексом.
Вывести все три массива на экран (каждый на отдельной строке), затем вывести количество целых элементов в третьем массиве

        import java.util.Scanner;
        import java.util.Random; 
        import java.util.Arrays;

        class Main {
            public static void main(String[] args) {
                int[] arr = new int[10];
                int[] arr2 = new int[10];
                double[] arr3 = new double[10];
                int sum = 0;

                Random rand = new Random();
                for (int i = 0; i < 10; i++) {
                    arr[i] = rand.nextInt(9) + 2;
                    arr2[i] = rand.nextInt(9) + 2;
                    arr3[i] = (double) arr[i] / arr2[i];
                }
                int s = 0;
                for (int i = 0; i < arr3.length; i++) {
                    if (arr3[i] % 1 == 0) {
                        s++;
                    }
                }
                System.out.println(Arrays.toString(arr));
                System.out.println(Arrays.toString(arr2));
                System.out.println(Arrays.toString(arr3));
            }
        }
        
        
14. Создайте массив из 20-ти первых чисел Фибоначчи и выведите его на экран. Напоминаем, что первый и второй члены последовательности равны единицам,
а каждый следующий — сумме двух предыдущих: 1 1 2 3 5 8 13 21 34 55 ...

        int[] arr = new int[20];
        arr[0] = 1;
        arr[1] = 0;
        for (int i = 2; i < arr.length; ++i) {
            arr[i] = arr[i - 1] + arr[i - 2];
            System.out.println(arr[i]);
        }
        
15. В массиве хранится информация о годе рождения каждого из N человек. Определить наибольший порядковый номер самого младшего по возрасту человека.

        import java.util.Scanner;

        public class Main {
            public static void main(String[] args) {
                Scanner sc = new Scanner(System.in);
                int n = sc.nextInt();
                int[] years = new int[n];
                for (int i = 0; i < n; i++) {
                    int k = sc.nextInt();
                    years[i] = k;
                }

                int ml = 200;
                int p = 0;
                for (int i = 0; i < n; i++) {
                    if (2021 - years[i] < ml) {
                        ml = 2021 - years[i];
                        p = i;
                    }
                }
                System.out.println(p + 1);
            }
        }
        
        
16. Создайте массив из 11 случайных целых чисел из отрезка [-1;1], выведите массив на экран в строку.
Определите какой элемент встречается в массиве чаще всего и выведите об этом сообщение на экран.
Если два каких-то элемента встречаются одинаковое количество раз, то не выводите ничего


    int[] arr = new int[11]; int a1 = 0, a2 = 0, a3 = 0;

    Random rand = new Random();
    for (int i = 0; i < arr.length; i++) {
        arr[i] = rand.nextInt(-1, 2);
        System.out.print(arr[i] + " ");

        if (arr[i] < 0) {
            a1++;
        }
        if (arr[i] == 0) {
            a2++;
        }
        if (arr[i] > 0) {
            a3++;
        }


        if (i == arr.length - 1) {
            if (a1 > a2 & a1 > a3)
                System.out.println("\n" + "Чаще всего встречается -1");
            if (a2 > a1 & a2 > a3)
                System.out.println("\n" + "Чаще всего встречается 0");
            if (a3 > a1 & a3 > a2)
                System.out.println("\n" + "Чаще всего встречается 1");
        }
    }


17. Создайте 2 массива из 5 случайных целых чисел из отрезка [0;5] каждый, выведите массивы на экран в двух отдельных строках.
Посчитайте среднее арифметическое элементов каждого массива и сообщите, для какого из массивов это значение оказалось больше
(либо сообщите, что их средние арифметические равны)


    int[] arr = new int[5]; int[] arr2 = new int[5]; int sum = 0;

    Random rand = new Random();
    for (int i = 0; i < arr.length; i++) {
        arr[i] = rand.nextInt(6);
        System.out.print(arr[i] + " ");
    }

    System.out.println();

    for (int i = 0; i < arr2.length; i++) {
        arr2[i] = rand.nextInt(6);
        System.out.print(arr2[i] + " ");
    }

    System.out.println();

    double a = 0;
    if (arr.length > 0) {

        double suma = 0;
        for (int j = 0; j < arr.length; j++) {
            suma += arr[j];
        }
        a = suma / arr.length;
        System.out.println(a);
    }


    double b = 0;
    if (arr.length > 0) {

        double sum1 = 0;
        for (int j = 0; j < arr.length; j++) {
            sum1 += arr[j];
        }
        b = sum1 / arr.length;
        System.out.println(b);
    }

    if (a > b) {
        System.out.println("Среднее арифметическое 1 массива больше чем у 2 массива.");
    }else if(b > a){
        System.out.println("Среднее арифметическое 2 массива больше чем у 1 массива.");
    }else{
        System.out.println("Среднее арифметическое 1 и 2 массива равны.");
    }


18. Даны два массива чисел, на N и M элементов. Требуется вывести те элементы первого массива (в том порядке, в каком они идут в первом массиве),
которых нет во втором массиве

Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] perv = new int[n];
        int[] vtor = new int[m];

        for (int i = 0; i < n; i++) {
            int k = sc.nextInt();
            perv[i] = k;
        }

        for (int i = 0; i < m; i++) {
            int h = sc.nextInt();
            vtor[i] = h;
        }


        int h = 0;

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (perv[i] == vtor[j]) {
                    h = 1;
                }
            }
            if (h == 0) {
                System.out.print(perv[i] + " ");
            }
            h = 0;
        }
        
        
19. Создайте массив из 15 случайных целых чисел из отрезка [0;9]. Выведите массив на экран.
Подсчитайте сколько в массиве чётных элементов и выведете это количество на экран на отдельной строке.


        int[] mas = new int[15];
        int sum = 0;
        for (int i = 0; i < mas.length; i++) {
            Random rand = new Random();
            mas[i] = rand.nextInt(10);
        }
        for (int i = 0; i < mas.length; i++) {
            System.out.println(mas[i] + " ");
            if (mas[i] > 0 && mas[i] % 2 == 0) {
                sum += 1;
            }
        }
        System.out.println(sum + " Четных");
        
        
20. Создайте массив из 4 случайных целых чисел из отрезка [10;99], выведите его на экран в строку. Определить и вывести на экран сообщение о том,
является ли массив строго возрастающей последовательностью

        int[] m = new int[4];
        for (int i = 0; i < m.length; i++) {
            Random rand = new Random();
            m[i] = rand.nextInt(10, 100);
            System.out.print(m[i] + " ");
        }
        boolean b = true;
        for (int i = 1; i < m.length; i++) {
            if (m[i] <= m[i - 1]) {
                b = false;
                break;
            }
        }
        if (b) {
            System.out.print("Массив возврастает");
        } else {
            System.out.print("Массив не возврастает");
        }
        
        
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
