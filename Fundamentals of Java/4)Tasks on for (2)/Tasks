Задачи на for (2):

1. По данному натуральному n<=9 выведите лесенку из n ступенек, i-я ступенька состоит из чисел от 1 до i без пробелов, при вводе 3 программа выведет: 1 12 123


        Scanner scan = new Scanner(System.in);
        
        int n = scan.nextInt();
        if (n <= 9) {
            for (int i = 1; i <= n; i++) {
                for (int j = 1; j <= i; j++) {
                    System.out.print(j);

                }
                System.out.println();
            }
        }
        
2. Вводится число N и затем N чисел по одному в строке Необходимо вывести максимальное число среди всех вводимых чисел. 
Входные данные: в первой строке вводится число N - количество чисел (N<=100) далее по одному в строке идут N чисел 
(все числа целые, не превышающие по модулю 10 000) Выходные данные: вывести на экран максимальное число из всех N чисел.

        Scanner scan = new Scanner(System.in);
        
        int n = scan.nextInt();
        int max = 0;
        for (int i = 1; i <= n; i++) {
            int b = scan.nextInt();
            if (max < b) {
                max = b;
            }
        }
        System.out.println(max);
        

3. Дано число N. На вход программы подаются N чисел. Необходимо вывести позицию минимального и максимального чисел среди всех чисел.

        Scanner scan = new Scanner(System.in);
        
        int n = scan.nextInt();
        int max = 0;
        int min = 100000000;
        for (int i = 1; i <= n; i++) {
            int b = scan.nextInt();
            if (max < b) {
                max = b;
            }
            if (min > b) {
                min = b;
            }
        }
        System.out.println(max);
        System.out.println(min);
        
4.Вводится число, проверить есть ли повторяющиеся цифры. Если да вывести yes, если нет - no

        Scanner scan = new Scanner(System.in);
        
        String n = scan.next();
        int t = 0;
        for (int i = 0; i < n.length(); i++) {
            for (int j = i + 1; j < n.length(); j++) {
                if (n.charAt(i) == n.charAt(j)) {
                    t = 1;
                }
            }
        }
        if (t == 0) {
            System.out.println("NO");
        } else {
            System.out.println("YES");
        }

5. Вводится число N и затем N чисел по одному в строке. Найти максимальное чётное число среди всех введённых чисел. 
Гарантируется, что в последовательности есть хотя бы одно четное число

        Scanner scan = new Scanner(System.in);
        
        int n = scan.nextInt();
        int max = 0;
        for (int i = 1; i <= n; i++) {
            int b = scan.nextInt();
            if (max < b && b % 2 == 0) {
                max = b;
            }
        }
        System.out.println(max);


6. Дано натуральное число n. Напечатайте все n-значные нечетные натуральные числа в порядке убывания.

        Scanner scan = new Scanner(System.in);
        
        int n = scan.nextInt();
        for (int j = n; j >= 1; j--) {
            if (j % 2 != 0) {
                System.out.println(j);
            }
        }


7. Вводится число N и затем N чисел по одному в строке. Определите, сколько элементов этой последовательности больше предыдущего элемента.

        Scanner scan = new Scanner(System.in);
        
        int n = scan.nextInt();
        int sum = 0;
        int p = 0;
        for (int i = 1; i <= n; i++) {
            int k = scan.nextInt();
            if (p < k) {
                sum += 1;
            }
            p = k;
        }
        System.out.println(sum - 1);
        
        
8. Даны два четырёхзначных числа A и B. Выведите все четырёхзначные числа на отрезке от A до B, запись которых является палиндромом.
 there is no decision
 
 9. Вводится число. Проверить является ли оно палиндромом, то есть одинаково читается с обеих сторон (25652, 78966987, 4521254)
 
        Scanner scan = new Scanner(System.in);
        String n = scan.next();
        int t = 0;
        for (int i = 0; i < n.length(); i++) {
            if (n.charAt(i) != n.charAt(n.length() - i - 1)) {
                t = 1;
            }
        }
        if (t == 0) {
            System.out.println("Число палиндром");
        } else {
            System.out.println("Число не палиндром");
        }
        
        
10. Вводится число N и затем N чисел по одному в строке. Определите, какое количество элементов этой последовательности, равны ее наибольшему элементу

import java.util.Scanner; import java.lang.Math;

        class Main {
            public static void main(String[] args) {
                Scanner scan = new Scanner(System.in);
                int n = scan.nextInt();
                int p = 0;
                int max = 0;
                int ddd = 0;
                for (int i = 0; i < n; i++) {
                    int b = scan.nextInt();
                    int stepen = (int) Math.pow(10, i);
                    ddd = ddd + b * stepen;
                    if (max < b) {
                        max = b;
                    }
                }
                for (int i = 0; i < n; i++) {
                    if (ddd % 10 == max) {
                        p = p + 1;
                    }
                    ddd = ddd / 10;
                }
                System.out.println(p - 1);
            }
        }
        
        
11. Вводится число N и затем N чисел по одному в строке. Требуется найти сумму элементов этой последовательности.

        Scanner scan = new Scanner(System.in);
        
        int n = scan.nextInt();
        int sum = 0;
        for (int i = 1; i <= n; i++) {
            int b = scan.nextInt();
            sum += b;
        }
        System.out.println(sum);
        
        
12. Вводится число N и затем N чисел по одному в строке. Определить, сколько получено двузначных чисел, которые заканчиваются на 3

        Scanner scan = new Scanner(System.in);
        
        int n = scan.nextInt();
        int a, c, sum = 0;
        for (int i = 1; i <= n; i++) {
            int b = scan.nextInt();
            if (b > 9 && b < 100) {
                c = b % 10;
                if (c == 3) {
                    sum += 1;
                }
            }
            System.out.println(sum);
        }


13. Вводится число N и затем N чисел по одному в строке. Определите, какое наибольшее число подряд идущих элементов этой последовательности равных друг другу.


        Scanner scan = new Scanner(System.in);
        
        int n = scan.nextInt();
        int p = 0;
        int max = 0;
        for (int i = 1; i <= n; i++) {
            int b = scan.nextInt();
            if (max < b) {
                max = b;
            }
            if (p < max) {
                p = max;
            }
        }
        System.out.println(p);

14. Вводится число N и затем N чисел по одному в строке. Определить, сколько получено чисел, которые делятся на 3.

        Scanner scan = new Scanner(System.in);
        
        int n = scan.nextInt();
        int a, c, sum = 0;
        for (int i = 1; i <= n; i++) {
            int b = scan.nextInt();
            if (b % 3 == 0) {
                sum += 1;
            }
        }
        System.out.println(sum);


15. Вводится число N и затем N чисел по одному в строке. Необходимо найти расстояние (по модулю)
между первым минимальным и первым максимальным числом последовательности.

 int s, p;
        for (int i = 10; i < 100; i++) {
            s = i;
            p = 1;
            while (s > 0) {
                p = p*(s % 10);
                s /= 10;
                if (i == p*2) {
                    System.out.println(i);
                }
            }
        }
        
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
